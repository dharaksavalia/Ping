<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">Raj Kukadia</string>
    <string name="quit_label">Quit</string>
    <string name="generate_error_label">Generate Error</string>
    <string name="game_enter_label">TicTacToe</string>
    <string name="about_mainactivity_label">About</string>
    <string name="about_mainactivity_text">
            Raj Kukadia \n
        kukadia.r@husky.neu.edu \n
        1st year M.S \n
           Telecommunication Systems Management \n

    </string>
    <string name="IMEI_label">IMEI</string>
    <string name="ok_label">OK</string>

    <!-- Game-->
    <string name="long_app_name">Ultimate Tic Tac Toe</string>
    <string name="action_settings">Settings</string>
    <string name="restart_label">Restart</string>
    <string name="main_menu_label">Main Menu</string>
    <string name="declare_winner">%1$s is the winner</string>
    <string name="continue_label">Continue</string>
    <string name="new_game_label">New Game</string>
    <string name="about_title">About Ultimate Tic Tac Toe</string>
    <string name="about_label">About</string>
    <string name="dict_label">Dictionary</string>
    <string name="scroggle_label">Scroggle</string>
    <string name="search_label">Search</string>
    <string name="save_label">Save</string>
    <string name="return_label">Return</string>
    <string name="clear_label">Clear</string>
    <string name="ack_label">Acknowledgement</string>
    <string name="ack_info_label">Info</string>
    <string name="about_text">\
This game is played just like
regular Tic Tac Toe with one difference: to win a tile
you have to win a smaller game of Tic Tac Toe inside that tile.\n\
\n\
A tie happens when there are no further moves.
In the case of a tie in a small board, that will count as a win for
both sides in the larger game.
</string>

    <string name="ack_content_label">
        <title>ACKNOWLEDGEMENT \n</title>
    </string>
    <string name="references">\n\nReferences </string>
<string name="ack_details_label_one">
    I have mapped every character to 5 bits. Hence compressing from 16 bits Unicode to 5 bits. \n\n
    Used the same binary values for comparing while the look up is in process.
       I have put four 3 letter words in a single Long, three 4 letter words in a Long, two 5 letter words in a Long, two 6 letter words in a Long.
       \n\nI have put each word from 7 to 25 letters length in a single Long. \n\nFor the words greater than 25 letters, I have used loaded them in string
       format itself since there are only 23 such words in the dictionary.
      \n\nFinally, I have loaded all these encoded files in seperate HashMaps.
        \n\nI have loaded the dictionary in the Main Activity itself so that the app runs smoother from there on.


</string>

    <string name="ack_details_label_two">

    <p>

    Code for TicTacToe: Hello, Android text by Ed Burnette \n \n
    Code for requesting run time permission: https://developer.android.com/training/permissions/requesting.html \n \n
    App icon: Google Images \n \n
    Sound: http://www.tannerhelland.com/music-directory/ \n\n
    Special thanks to my friend Dharak Savalia who helped me comming with a better idea for loading the dictionary efficiently.
</p>


</string>
</resources>



